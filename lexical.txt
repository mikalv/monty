keyword ::= 
             "and"     | "del"     | "from"    | "not"     | "while"    
           | "as"      | "elif"    | "global"  | "or"      | "with"     
           | "assert"  | "else"    | "if"      | "pass"    | "yield"    
           | "break"   | "except"  | "import"  | "print"              
           | "class"   | "exec"    | "in"      | "raise"              
           | "continue"| "finally" | "is"      | "return"             
           | "def"     | "for"     | "lambda"  | "try"

identifier ::= 
             (letter|"_") (letter | digit | "_")*
  
    (where the matched string is not a keyword)

letter ::= 
             lowercase | uppercase
  
lowercase ::= 
             "a"|"b"|...|"z"
  
uppercase ::= 
             "A"|"B"|...|"Z"
  
digit ::= 
             "0"|"1"|...|"9"

stringliteralpiece ::=
             shortstring
  
shortstring ::= 
             "'" shortstringitem1* "'"
              | '"' shortstringitem2* '"'
  
shortstringitem1 ::= 
             <any source character except "'" or newline> | escapeseq
  
shortstringitem2 ::= 
             <any source character except '"' or newline> | escapeseq
  
escapeseq ::= 
             '\' <any ASCII character> | '\' <1-3 octal digits>

integer ::= 
             decimalinteger | octinteger | hexinteger
  
decimalinteger ::= 
             nonzerodigit digit* | "0"
  
octinteger ::= 
             "0" octdigit+
  
hexinteger ::= 
             "0" ("x" | "X") hexdigit+
  
nonzerodigit ::= 
             "1"..."9"
  
octdigit ::= 
             "0"..."7"
  
hexdigit ::= 
             digit | "a"..."f" | "A"..."F"

floatnumber ::= 
             pointfloat | exponentfloat
  
pointfloat ::= 
             [intpart] fraction | intpart "."
  
exponentfloat ::= 
             (intpart | pointfloat)
              exponent
  
intpart ::= 
             digit+
  
fraction ::= 
             "." digit+
  
exponent ::= 
             ("e" | "E") ["+" | "-"] digit+
